import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,d as t}from"./app-1ZTmwhuN.js";const s={},o=t(`<h1 id="样式的行为" tabindex="-1"><a class="header-anchor" href="#样式的行为" aria-hidden="true">#</a> 样式的行为</h1><blockquote><p>[!warning] WORK IN PROGRESS 此页面正在施工中。</p></blockquote><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><p>样式可以使用不同的元素来进行特定的配置。在 <code>cs:citation</code> 元素中设置元素可以配置特定的 <a href="#%E5%BC%95%E6%96%87%E9%80%89%E9%A1%B9">引文选项</a>；在 <code>cs:bibliography</code> 元素和 <a href="#%E5%85%A8%E5%B1%80%E9%80%89%E9%A1%B9">全局选项</a>（同时影响引文和参考文献条目）中，可以配置特定的参考文献条目。继承的名字选项可以在 <code>cs:style</code>,<code>cs:style</code> 和 <code>cs:bibliography</code> 中设置。最后，<a href="#%E6%9C%AC%E5%9C%B0%E5%8C%96%E9%80%89%E9%A1%B9">本地化选项</a> 可以在 <code>cs:locale</code> 元素中设置。</p><h3 id="引文选项" tabindex="-1"><a class="header-anchor" href="#引文选项" aria-hidden="true">#</a> 引文选项</h3><h4 id="消除歧义" tabindex="-1"><a class="header-anchor" href="#消除歧义" aria-hidden="true">#</a> 消除歧义</h4><p>当一个引用对应多个参考文献条目的时候会产生歧义。下面有四种方法用来消除歧义：</p><ol><li>显示更多作者姓名</li><li>扩展姓名（添加缩写或者完整的名）</li><li>添加年份后缀</li><li>在 <code>cs:choose</code> 的 <code>disambiguate</code> 属性为 true 的时候，实行渲染</li></ol><p>方法 2 也可以在全局名称歧义消除异己整个文档中有歧义的地方。</p><p>消除歧义的方法在下面属性被设置的时候，将会被激活，并且按上述列表中的方法进行尝试：</p><p><code>disambiguate-add-names</code> 步骤 1</p><p>​ 如果设置为 <code>&quot;true&quot;</code>（默认为 <code>false</code>），使用 et-al 缩写锁代替的名字列表会逐个的加入到渲染列表中，知道添加的名字可以消除引用歧义为止。</p><p><code>disambiguate-add-givenname</code> 步骤 2</p><p>​ 如果设置为 <code>&quot;true&quot;</code>（默认为 <code>false</code>），产生歧义的名字将被扩展。名字扩展可以使用 <code>givenname-disambiguation-rule</code> 设置。下面是一个例子。</p><table><thead><tr><th>含有歧义的引用</th><th>消除歧义的引用</th></tr></thead><tbody><tr><td>(Simpson 2005; Simpson 2005)</td><td>(H. Simpson 2005; B. Simpson 2005)</td></tr><tr><td>(Doe 1950; Doe 1950)</td><td>(John Doe 1950; Jane Doe 1950)</td></tr></tbody></table><p>如果不能通过扩展名字来实现消除歧义，当 <code>disambiguate-add-names</code> 属性设置为 <code>&quot;true&quot;</code>， the names still hidden as a result of et-al abbreviation after the disambiguation attempt of <code>disambiguate-add-names</code> are added one by one to all members of a set of ambiguous cites, until no more cites in the set can be disambiguated by adding expanded names.</p><p><code>givenname-disambiguation-rule</code></p><p>用来指定 a) 名字扩展的目的是不是仅限于消除歧义，还是对消除歧义的名字有其他的目的 (只有在后面的情况中，有歧义的名字才会在明确的引用中扩展，例如：从 (Doe 1950; Doe 2000) 扩展到 (Jane Doe 1950; John Doe 2000)) b) 名称扩展是针对全部还是针对每个引用的名字 c) 扩展名字的方法。</p><p><strong>扩展单个名字</strong></p><p>​ 扩展单个名字的步骤是：</p><ol><li>如果 <code>initialize-with</code> 被设置并且 <code>initialize</code> 的值为默认的 true： (a) 可以通过 <code>&quot;long&quot;</code> 而不是 <code>&quot;short&quot;</code> 的形式来渲染首字母 (e.g. Doe 变为 J. Doe) (b) 如果 <code>initialize</code> 设置为 <code>&quot;flase&quot;</code>，完整的姓名被渲染，而不是首字母（J. Doe 变为 John Doe）</li><li>如果 <code>initialize-with</code> 没有被设置，使用 <code>&quot;long&quot;</code> 格式渲染完整的姓名（Doe 变为 John Doe）</li></ol><p><strong>消除歧义法则</strong></p><p>​ <code>givenname-disambiguation-rule</code> 属性可设置的值为：</p><p>​ &quot;all-name&quot;</p><p>​ 名字扩展具有消除名字歧义和消除引用歧义的双重目的。在渲染的有歧义的名称中，所有的有歧义的或者没有歧义的名字都将被消除歧义。</p><p>​ &quot;all-names-with-initials&quot;</p><p>​ 和 &quot;all-name&quot; 一样，但是名称的扩展仅限于缩写。当 <code>initialize-with</code> 没被设置或者 <code>initialize</code> 被设置为 <code>&quot;false&quot;</code> 时，不会进行消除歧义的尝试。</p><p>​ &quot;primary-name&quot;</p><p>​ 和 &quot;all-name&quot; 一样，但是消除歧义仅限于每个引用的第一个名字。</p><p>​ &quot;primary-name-with-initials&quot;</p><p>​ 和 &quot;all-names-with-initials&quot; 一样，但是消除歧义仅限于每个引用的第一个名字。</p><p>​ &quot;by-cite&quot;</p><p>​ 默认，和 &quot;all-name&quot; 一样，但是名称扩展的目的仅限于消除引用的歧义，只有有歧义的名字在有歧义的引用中才会被影响，并且在引用的第一个名字消除歧义后就停止消除歧义。</p><p><code>disambiguate-add-year-suffix</code> 步骤 3</p><p>如果设置为 <code>&quot;true&quot;</code>（默认为 <code>&quot;false&quot;</code>），字母序的年后缀将会被添加到有歧义的名字上（&quot;Doe 2007, Doe 2007&quot; 变为 &quot;Doe 2007a, Doe 2007b&quot;）。当字母序到达 <code>&quot;z&quot;</code>，后，就会启用两个字母（&quot;z&quot;, &quot;aa&quot;, &quot;ab&quot;, …, &quot;az&quot;, &quot;ba&quot; 等等）。</p><hr><p>如果应用上述的歧义消除方法后仍然存在歧义，则尝试通过 <code>disambiguate</code> 条件来渲染不同的引用 [步骤 4] (见 <a href="#choose">choose</a>)。</p><h4 id="引用分组" tabindex="-1"><a class="header-anchor" href="#引用分组" aria-hidden="true">#</a> 引用分组</h4><p>通过引用分组，可以将相同名称的文本引用放在一起，比如：(Doe 1999; Smith 2002; Doe 2006; Doe et al. 2007) 将会变为 (Doe 1999; Doe 2006; Smith 2002; Doe et al. 2007)。引用分组在引用排序和消除歧义后执行。分组后的引用保持其相对顺序，并移到第一个改组中引用出现的第一个位置。</p><p>引用分组可以在 <code>cs:citation</code> 元素中通过设置 <code>cite-group-delimiter</code> 属性或者 <code>collapse</code> 属性（见 [cite collapsing](#cite collapsing)）激活。</p><p><code>cite-group-delimiter</code></p><p>激活引用分组并为引用组中的引用指定分隔符，默认为 <code>&quot;,&quot;</code>。例如，当 <code>cs:citation</code> 元素中的 <code>cs:layout</code> 中的 <code>delimiter</code> 设置为 <code>&quot;;&quot;</code> 时，<code>collapse</code> 设置为 <code>&quot;year&quot;</code>，<code>cite-group-delimiter</code> 设置为 <code>&quot;,&quot;</code>，将生成类似 &quot;(Doe 1999,2001; Jones 2000)&quot; 的引用。</p><h4 id="cite-collapsing-引用折叠" tabindex="-1"><a class="header-anchor" href="#cite-collapsing-引用折叠" aria-hidden="true">#</a> cite collapsing/引用折叠</h4><p>author 或者 author-date 类型的引用格式中的引用分组和数字格式中的引用范围可以通过 <code>collapse</code> 属性来折叠。折叠引用组中分隔符可以是使用 <code>year-suffix-delimiter</code> 和 <code>after-collapse-delimiter</code> 属性来设置：</p><p><code>collapse</code></p><p>激活引用分组和折叠。允许的值为：</p><ul><li>&quot;citation-number&quot; - 当使用数字样式的时候，折叠引用数字的范围（通过 <code>&quot;citation-number&quot;</code> 变量来渲染） ，例如：&quot;[1, 2, 3, 5]&quot; 变为 &quot;[1–3, 5]&quot;。只有升序的引用才可以折叠，比如： &quot;[3, 2, 1]&quot; 将不会折叠。</li><li>&quot;year&quot; - 通过压缩相同的名字来折叠引用分组，例如： &quot;(Doe 2000, Doe 2001)&quot; 变为 &quot;(Doe 2000, 2001)&quot;。</li><li>&quot;year-suffix&quot; - 对名字相同的折叠项，折叠相同的年份，例如： &quot;(Doe 2000a, 2000b)&quot; 变为 &quot;(Doe 2000a, b)&quot;。</li><li>&quot;year-suffix-ranged&quot; - 对名字相同的折叠项，折叠年份范围，例如： &quot;(Doe 2000a, b, c, e)&quot; 变为 &quot;(Doe 2000a–c,e)&quot;。</li></ul><p>当 <code>disambiguate-add-year-suffix</code> 设置为 <code>&quot;false&quot;</code> 时，或者引用中包含位置（例如：“(Doe 2000a-c, 2000d, p. 5, 2000e,f)”，&quot;Doe 2000d&quot; 有一个页码位置），&quot;year-suffix&quot; 和 &quot;year-suffix-ranged&quot; 回退到 &quot;year&quot;。</p><p><code>year-suffix-delimiter</code></p><p>​ 设置年份后缀的分隔符。默认在 <code>cs:citation</code> 元素的 <code>cs:layout</code> 中设置。例如：当 <code>collapse</code> 设置为 <code>&quot;year-suffix&quot;</code>，<code>cs:citation</code> 中的 <code>cs:layout</code> 的 <code>delimiter</code> 元素设置为 <code>&quot;;&quot;</code>，并且 <code>year-suffix-delimiter</code> 设置为 <code>&quot;,&quot;</code> 时，渲染结果将类似于 &quot;(Doe 1999a,b; Jones 2000)&quot;。</p><p><code>after-collapse-delimiter</code></p><p>​ 设置折叠后的引用组要使用的分隔符。默认在 <code>cs:citation</code> 元素的 <code>cs:layout</code> 中设置。例如：当 <code>collapse</code> 设置为 <code>&quot;year&quot;</code>，<code>cs:citation</code> 中的 <code>cs:layout</code> 的 <code>delimiter</code> 元素设置为 <code>&quot;,&quot;</code>，并且 <code>after-collapse-delimiter</code> 设置为 <code>&quot;;&quot;</code> 时，渲染结果将类似于 &quot;(Doe 1999, 2001; Jones 2000, Brown 2001)&quot;。</p><h4 id="标注距离" tabindex="-1"><a class="header-anchor" href="#标注距离" aria-hidden="true">#</a> 标注距离</h4><p><code>near-note-distance</code></p><p>当有一个预先的标注时，<code>&quot;near-note&quot;</code> 位置是我引用被判断为真，这种预先的标注可以为 a) 指向同一个项目 b) 当前注视以前的脚注或尾注。（译注：不知道讲了什么）</p><h3 id="参考文献目录选项" tabindex="-1"><a class="header-anchor" href="#参考文献目录选项" aria-hidden="true">#</a> 参考文献目录选项</h3><h4 id="空白" tabindex="-1"><a class="header-anchor" href="#空白" aria-hidden="true">#</a> 空白</h4><p><code>hanging-indent</code></p><p>​ 如果设置为 <code>&quot;true&quot;</code>（默认为 <code>&quot;false&quot;</code>），参考文献列表将采用悬挂缩进渲染。</p><p><code>second-field-align</code></p><p>​ 如果该属性被设置，则书目条目的后续行沿第二字段对齐。 使用 &quot;flush&quot; 时，第一个字段与边距齐平。 对于 &quot;margin&quot;，第一个字段放在 margin 中，随后的行与 margin 对齐。例如，当第一个字段设置为 <code>&lt;text variable=&quot;citation-number&quot; suffix=&quot;. &quot;/&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>9.  Adams, D. (2002). The Ultimate Hitchhiker&#39;s Guide to the
    Galaxy (1st ed.).
10. Asimov, I. (1951). Foundation.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>line-spacing</code></p><p>​ 指定垂直方向的行距。默认值为 <code>&quot;1&quot;</code>，即单倍行距。可以被设置为任意正整数，用来表示对应倍数的行距。</p><p><code>entry-spacing</code></p><p>​ 指定不同条目垂直方向的距离，默认值为 <code>&quot;1&quot;</code>，即一倍距离，可以被设置为任意正整数，用来表示对应倍数的距离。</p><h4 id="参考文献分组" tabindex="-1"><a class="header-anchor" href="#参考文献分组" aria-hidden="true">#</a> 参考文献分组</h4><p><code>subsequent-author-substitute</code></p><p>​ 如果该属性被设置，则此属性将用上一条条目中的名称替换参考文献条目中的名字。具体的代替方案取决于 <code>subsequent-author-substitute-rule</code> 属性的值。替换仅限于 <code>cs:names</code> 元素中渲染的第一个名字。</p><p><code>subsequent-author-substitute-rule</code></p><p>​ 用来指定 <code>subsequent-author-substitute</code> 的结果怎么替换。允许的值为：</p><ul><li>&quot;complete-all&quot; - 默认值，当名字变量中的所有渲染的名字和上一个参考文献条目相同时，<code>subsequent-author-substitute</code> 属性的值将代替整个名字列表（包括标点和术语，比如 et-al 和 and 等术语），但 <code>cs:names</code> 元素中设置的后缀将不会被代替。</li><li>&quot;complete-each&quot; - 和 &quot;complete-all&quot; 一样，需要完整的匹配，但是 <code>subsequent-author-substitute</code> 属性的值将会代替所有被渲染的名字。</li><li>&quot;partial-each&quot; - 当有一个或者多个名字变量中的渲染名字和上一个条目中相同时，使用 <code>subsequent-author-substitute</code> 属性代替对应的值。匹配从第一个名字开始，直到不匹配的名字为止。</li><li>&quot;partial-first&quot; - 和 &quot;partial-each&quot; 相同，但是替换仅限于第一个名字。</li></ul><p>对下面的例子：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>Doe. 1999.
Doe. 2000.
Doe, Johnson &amp; Williams. 2001.
Doe &amp; Smith. 2002.
Doe, Stevens &amp; Miller. 2003.
Doe, Stevens &amp; Miller. 2004.
Doe, Williams et al. 2005.
Doe, Williams et al. 2006.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>subsequent-author-substitute</code> 设置为 <code>&quot;-&quot;</code>，并且 <code>subsequent-author-substitute-rule</code> 设置为 <code>&quot;complete-all&quot;</code>，渲染结果将变为：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>Doe. 1999.
---. 2000.
Doe, Johnson &amp; Williams. 2001.
Doe &amp; Smith. 2002.
Doe, Stevens &amp; Miller. 2003.
---. 2004.
Doe, Williams et al. 2005.
---. 2005.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>subsequent-author-substitute-rule</code> 设置为 <code>&quot;complete-each&quot;</code> 时，渲染的结果为：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>Doe. 1999.
---. 2000.
Doe, Johnson &amp; Williams. 2001.
Doe &amp; Smith. 2002.
Doe, Stevens &amp; Miller. 2003.
---, --- &amp; ---. 2004.
Doe, Williams et al. 2005.
---, --- et al. 2006.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>subsequent-author-substitute-rule</code> 设置为 <code>&quot;partial-each&quot;</code> 时，渲染的结果为：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>Doe. 1999.
---. 2000.
Doe, Johnson &amp; Williams. 2001.
--- &amp; Smith. 2002.
Doe, Stevens &amp; Miller. 2003.
---, --- &amp; ---. 2004.
Doe, Williams et al. 2005.
---, --- et al. 2005.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>subsequent-author-substitute-rule</code> 设置为 <code>&quot;partial-first&quot;</code> 时，渲染的结果为：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>Doe. 1999.
---. 2000.
Doe, Johnson &amp; Williams. 2001.
--- &amp; Smith. 2002.
Doe, Stevens &amp; Miller. 2003.
---, Stevens &amp; Miller. 2004.
Doe, Williams et al. 2005.
---, Williams et al. 2005.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局选项" tabindex="-1"><a class="header-anchor" href="#全局选项" aria-hidden="true">#</a> 全局选项</h3><p><strong>人名中的连字符</strong></p><p><code>initialize-with-hyphen</code></p><p>​ 该属性用来制定合成名字中间是不是使用连字符。例如，<code>&quot;Jean-Luc&quot;</code> 是一个合成名字，如果该属性设置为 <code>&quot;true&quot;</code>（默认），渲染结果为 <code>&quot;J.-L.&quot;</code>，如果设置为 <code>&quot;false&quot;</code>，渲染结果为 <code>&quot;J.L.&quot;</code>。</p><p><strong>页码范围</strong></p><p><code>page-range-format</code></p><p>​ 用来设置页码范围的格式，是不是使用简写来压缩。其可选的值有：<code>&quot;chicago&quot;</code> (&quot;321–28&quot;)， <code>&quot;expanded&quot;</code> ( &quot;321–328&quot;)， <code>&quot;minimal&quot;</code> (&quot;321–8&quot;)， 或者 <code>&quot; minimal-two&quot;</code> (&quot;321–28&quot;)。每一组值前面表示可选的属性值，后面是渲染结果的例子。也可见 [附录V 页码范围格式](#附录V 页码范围格式)。使用 <code>page-range-delimiter</code> 属性可以用来设置页面范围分割的符号，该属性在 CSL 1.0.1 中引入，默认是一个破折号。如果改属性没有设置，就默认使用破折号。</p><p><strong>Name Particles</strong></p><p>​ 西方人的名字中经常包括一个或者多个小部分，例如,<code>&quot;de&quot;</code> 在荷兰人的名字中 <code>&quot;W. de Koning&quot;</code>。在仅显示姓氏时，这些小部分可以分为必须保留和可删除（或译为不可省略和可省略）两种类型：这两种类型分别称为 <code>non-dropping</code> 部分和 <code>dropping</code> 部分。一个单个的名字可以同时包括这两种类型（不能删除的类型始终位于可删除类型的后面）。例如，<code>&quot;W. de Koning&quot;</code> 和法国名字 <code>&quot;Jean de la Fontaine&quot;</code> 可以被解构为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;given&quot;</span><span class="token operator">:</span> <span class="token string">&quot;W.&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;non-dropping-particle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;de&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;family&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Koning&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;given&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Jean&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;dropping-particle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;de&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;non-dropping-particle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;La&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;family&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Fontaine&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在仅显示姓氏的时候，只保留不能删除的部分，<code>&quot;De koning&quot;</code> 和 <code>&quot;La Fontaine&quot;</code>。</p><p>在名字倒写的情况下，即姓氏在名字之前，在姓氏后面始终添加 <code>dropping particle</code>，但是 <code>non-dropping</code> 部分可以前置（例如，<code>&quot;de Koning, W.&quot;</code>）或者后置（<code>Koning, W. de</code>）。在名字倒写，不可省略粒子前置时，可以使用下面的方式对名字进行排序：排序 A：将不可省略粒子和姓一起保留作为主排序键值的一部分；排序 B：通过将不可省略粒子和姓分开，并使其成为二级排序键值，并加入可省略粒子（如果有):</p><p><strong>Sort order A: 不可省略粒子不降级</strong></p><ul><li>主排序键值 &quot;La Fontaine&quot;</li><li>次排序键值 &quot;de&quot;</li><li>第三排序键值: &quot;Jean&quot;</li></ul><p><strong>Sort order B: 不可省略粒子降级</strong></p><ul><li>主排序键值 &quot;Fontaine&quot;</li><li>次排序键值 &quot;de La&quot;</li><li>第三排序键值 &quot;Jean&quot;</li></ul><p>对不可省略粒子的设置可以使用 <code>demote-non-dropping-particle</code> 选项：</p><p><code>demote-non-dropping-particle</code></p><p>​ 用来设置在倒写的名字中不可省略粒子的显示和排序方式（例如 Koning W. de）。可设置的值为：</p><ul><li>&quot;never&quot;: 不可省略粒子被作为姓中的一部分对待，并附加可省略粒子（&quot;de Koning, W.&quot; &quot;La Fontaine, Jean de&quot;）。不可省略粒子作为主排序键值的一部分 (排序 A，例如. &quot;de Koning, W.&quot; 将出现在首字母 &quot;D&quot; 的区域).</li><li>&quot;sort-only&quot;: 显示的方式和 &quot;never&quot; 相同，但是不可省略粒子降级作为二级排序键值。（排序 B, &quot;de Koning, W.&quot; 出现在首字母 &quot;K&quot; 的区域).</li><li>&quot;display-and-sort&quot; （默认），可省略粒子和不可省略粒子在最后（ &quot;Koning, W. de&quot; 和 &quot;Fontaine, Jean de La&quot;）。对名字排序，所有的粒子都是二级排序键值的一部分。（排序 B，&quot;Koning, W. de&quot; 出现在首字母 &quot;K&quot; 的区域).</li></ul><p>某些名字中包含的粒子禁止被降级。在这些情况中，粒子将和姓合并到一起，比如，对于法国名字 Charles de Gaulle</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;family&quot;</span><span class="token operator">:</span> <span class="token string">&quot;de Gaulle&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;given&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Charles&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可继承的名称选项" tabindex="-1"><a class="header-anchor" href="#可继承的名称选项" aria-hidden="true">#</a> 可继承的名称选项</h3><p>​ <code>cs:names</code> 和 <code>cs:name</code> 元素的属性也可以在 <code>cs:style</code>、<code>cs:citation</code> 和 <code>cs:bibliography</code> 元素中设置。这样就不需要每次在 <code>cs:names</code> 和 <code>cs:name</code> 出现的时候赋值。</p><p>​ 可以在 <code>cs:name</code> 元素中继承的属性有 <code>and</code>, <code>delimiter-precedes-et-al</code>, <code>delimiter-precedes-last</code>, <code>et-al-min</code>, <code>et-al-use-first</code>, <code>et-al-use-last</code>, <code>et-al-subsequent-min</code>, <code>et-al-subsequent-use-first</code>, <code>initialize</code>, <code>initialize-with</code>, <code>name-as-sort-order</code> 和 <code>sort-separator</code>。<code>name-form</code> 属性和 <code>name-delimiter</code> 属性对英语 <code>cs:name</code> 元素中的 <code>form</code> 和 <code>delimiter</code> 属性。同样地，<code>names-delimiter</code> 属性对应 <code>cs:names</code> 元素中的 <code>delimiter</code> 属性。</p><p>​ 当一个可继承的名称属性在 <code>cs:style</code>，<code>cs:citation</code> 和 <code>cs:bibliography</code> 中设置时，其值将作用于改元素包含的所有的 <code>cs:names</code> 元素。如果一个属性在多个可继承的层次设置，最底层的值发挥作用。</p><h3 id="局部选项" tabindex="-1"><a class="header-anchor" href="#局部选项" aria-hidden="true">#</a> 局部选项</h3><p><code>limit-day-ordinals-to-day-1</code></p><p>​ 日期格式在 <code>cs:date</code> 和 <code>cs:date-part</code> 元素中定义。默认地，当 <code>cs:date-part</code> 元素中的 <code>name</code> 设置为 <code>&quot;day&quot;</code>，<code>form</code> 属性设置为 <code>&quot;ordinal&quot;</code> 时，所有的天（1 到 31）将会以序数形式渲染，例如：&quot;January 1st&quot;，&quot;January 2nd&quot; 等等。通过将 <code>limit-day-ordinals-to-day-1</code> 属性设置为 <code>&quot;true&quot;</code>（默认值为 <code>&quot;false&quot;</code>），序数格式将仅限于每个月的第一天，其他的天将不使用序数格式。这在某些语言中出现，比如法语，&quot;1er janvier&quot;，&quot;2 janvier&quot;，&quot;3 janvier&quot;。</p><p><code>punctuation-in-quote</code></p><p>​ 当 <code>cs:text</code> 元素渲染时，如果 <code>quotes</code> 属性设置为 <code>&quot;true&quot;</code>（见 <a href="#%E6%A0%BC%E5%BC%8F%E5%8C%96">格式化</a>），并且在输出后有逗号或者句号，<code>punctuation-in-quote</code> 属性可以控制标点放在括号的内还是外，<code>&quot;false&quot;</code> 为外（默认），<code>&quot;true&quot;</code> 为内。</p><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序 ***</h2><p>​ <code>cs:citation</code> 和 <code>cs:bibliography</code> 元素可以在 <code>cs:layout</code> 元素之前携带一个 <code>cs:sort</code> 子元素，来实现对引文或者参考文献条目的排序。在缺失 <code>cs:sort</code> 元素时，引文和文献条目将会使用他们在文章中出现的顺序来排序。</p><p>​ <code>cs:sort</code> 元素必须包含一个或者多个 <code>cs:key</code> 子元素，可以在该元素中设置变量（[附录 IV 变量](#附录 IV 变量)）或者宏名来实现排序。对于每个 <code>cs:key</code> 元素，排序的顺序可以通过设置 <code>sort</code> 属性来设置为升序（<code>&quot;ascending&quot;</code>，默认）或者降序（<code>&quot;descending&quot;</code>）。属性 <code>names-min</code>,<code>names-use-first</code>,<code>names-use-last</code> 可以用来覆盖 <code>et-al-min</code>/<code>et-al-subsequent-min</code>, <code>et-al-use-first</code>/<code>et-al-subsequent-use-first</code> 和 <code>et-al-use-last</code> 属性的值，并且可以通过 <code>cs:key</code> 影响所有的名字.</p><p>​ 排序的键值是按顺序求值的，也就是说：首先，使用第一个排序键值对所有的项目进行排序。然后使用第二个键值对第一个键值排序后的结果进行排序，直到所有的键值都完成排序为止。如果键值为空，就放到最后。</p><p>​ 这里给出一个例子：其中首先引用 <code>&quot;author&quot;</code> 宏进行排序，并且使用 <code>et al.</code> 来对较长的作者序列进行代替。然后，使用 <code>&quot;issued&quot;</code> 变量来进行第二次排序，使用降序：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>citation</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sort</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span> <span class="token attr-name">macro</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>author<span class="token punctuation">&quot;</span></span> <span class="token attr-name">names-min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">names-use-first</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>issued<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>descending<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sort</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- rendering elements --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>citation</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 变量或者宏的排序键值可以与 <code>&quot;normal&quot;</code> 渲染的输出不同，具体要依赖下面的细节：</p><h3 id="排序变量" tabindex="-1"><a class="header-anchor" href="#排序变量" aria-hidden="true">#</a> 排序变量</h3><p>​ <code>cs:key</code> 元素通过 <code>variable</code> 变量属性调用变量的排序键值。名称变量、日期变量和数字变量除外：</p><p><strong>名称</strong>: <a href="#%E5%90%8D%E5%AD%97%E5%8F%98%E9%87%8F">名字变量</a> 通过变量属性被调用，例如 <code>&lt;key variable=&quot;author&quot;/&gt;</code>，当 <code>form</code> 属性设置为 <code>&quot;long&quot;</code>，<code>name-as-sort-order</code> 属性设置为 <code>&quot;all&quot;</code>，返回名字列表字符串。</p><p><strong>日期</strong>：<a href="#%E6%97%A5%E6%9C%9F%E5%8F%98%E9%87%8F">日期变量</a> 通过 <code>variable</code> 属性被调用，返回 <code>YYYYMMDD</code> 格式。使用 0 代替缺失的日期部分，例如：<code>December 2000</code> 渲染为 <code>20001200</code>。因此，简略的日期在升序排列的时候更加靠前，例如：2000, May 2000, May 1st 2000。负数的年份（即公元前）将被反向排序，比如：100BC, 50BC, 50AD, 100AD。排序过程中，季节将被忽略，因为南北半球的季节顺序不同。在日期范围中，开始的日期用于主要排序，结束日期用于次要排序，例如：2000–2001, 2000–2005, 2002–2003, 2002–2009。在具有相同的开始日期时，日期范围将放在单独的日期后，例如：2000, 2000–2002。</p><p><strong>数字</strong>：<a href="#%E6%95%B0%E5%AD%97%E5%8F%98%E9%87%8F">数字变量</a> 通过 <code>variable</code> 属性来调用，返回整数（<code>form</code> 设置为 <code>&quot;numeric&quot;</code>）如果原始的变量值仅由非数字文本组成，则将该值作为文本字符串返回。</p><h3 id="排序宏" tabindex="-1"><a class="header-anchor" href="#排序宏" aria-hidden="true">#</a> 排序宏</h3><p>​ 变量排序的键值是由字符串值组成，没有富文本标记。通过宏属性中的键值 <code>cs:key</code> 来调用。下面为一些特殊情况。</p><p>​ 对于名字排序，使用相同的宏而不是直接使用名字变量来渲染和排序有 4 个好处。第一，可以使用替换，例如：可以使用 <code>&quot;editor&quot;</code> 变量代替空的 <code>&quot;author&quot;</code> 变量。第二，可以使用 et-al 缩写，在宏里使用 <code>et-al-min</code>/<code>et-al-subsequent-min</code>, <code>et-al-use-first</code>/<code>et-al-subsequent-use-first</code> 和 <code>et-al-use-last</code> 可选属性，或者覆盖 <code>cs:key</code> 元素中的 <code>names-min</code>, <code>names-use-first</code> 和 <code>names-use-last</code> 。当 et-al 缩写出现的时候，<code>&quot;et-al&quot;</code> 和 <code>&quot;and others&quot;</code> 术语不会包括在排序键值中。第三，名字可以只使用姓来排序，即使用宏，其中的 <code>cs:name</code> 扽 <code>form</code> 属性设置为 <code>&quot;short&quot;</code>。最后，通过调用宏，将 <code>cs:name</code> 中的 <code>form</code> 属性设置为 <code>&quot;count&quot;</code>，可以按姓名列表中姓名的数目进行排序。至于使用 <code>variable</code> 属性对姓名进行排序，将 <code>cs:name</code> 中的 <code>name-as-sort-order</code> 属性设置为 <code>&quot;all&quot;</code>，返回值为排序后的名称列表。</p><p>​ 在宏中带有 <code>cs:number</code> 的 <a href="#%E6%95%B0%E5%AD%97%E5%8F%98%E9%87%8F">数字变量</a> 的和日期变量的渲染方法和通过变量的调用相同。唯一的区别是：如果通过 <code>variable</code> 属性调用日期变量，将返回完整的日期。相反地，宏调用则只返回原本要渲染的日期部分。例如：</p><h2 id="范围分隔符" tabindex="-1"><a class="header-anchor" href="#范围分隔符" aria-hidden="true">#</a> 范围分隔符</h2><p>​ &quot;citation-number&quot; 和 &quot;year-suffix&quot; 变量的折叠范围以短划线分隔，例如 &quot;（1-3，5）&quot; 和 &quot;（Doe 2000a-c，e）&quot;。</p><p>​ &quot;locator&quot; 变量总是使用一个短划线代替任意的连字符。 对 &quot;page&quot; 变量来说，只有 <code>cs:style</code> 中的 <code>page-ran ge-format</code> 属性被设置时，替换才会执行（见 <a href="#%E9%A1%B5%E7%A0%81%E8%8C%83%E5%9B%B4">页码范围</a>）。</p><h2 id="格式化" tabindex="-1"><a class="header-anchor" href="#格式化" aria-hidden="true">#</a> 格式化</h2><p>​ 下面的属性可以在 <code>cs:date</code>, <code>cs:date-part</code>, <code>cs:et-al</code>, <code>cs:group</code>, <code>cs:label</code>, <code>cs:layout</code>, <code>cs:name</code>, <code>cs:name-part</code>, <code>cs:names</code>, <code>cs:number</code> 和 <code>cs:text</code> 中设置：</p><p><code>font-style</code></p><p>用来设置字体，可能的值为：</p><ul><li>&quot;normal&quot; 默认</li><li>&quot;italic&quot; 设置文字的斜体</li><li>&quot;oblique&quot; 设置没有斜体的文字倾斜</li></ul><p><code>font-variant</code></p><p>Allows for the use of small capitals, 值可以设置为:</p><ul><li>&quot;normal&quot; 默认</li><li>&quot;small-caps&quot;</li></ul><p><code>font-weight</code></p><p>设置字宽，值可以为：</p><ul><li>&quot;normal&quot; 默认</li><li>&quot;bold&quot;</li><li>&quot;light&quot;</li></ul><p><code>text-decoration</code></p><p>设置下划线，值可以为：</p><ul><li>&quot;none&quot; 默认</li><li>&quot;underline&quot;</li></ul><p><code>vertical-align</code></p><p>设置垂直对齐，值可以为：</p><ul><li>&quot;baseline&quot; 默认</li><li>&quot;sup&quot; 上标</li><li>&quot;sub&quot; 下标</li></ul><h2 id="词缀" tabindex="-1"><a class="header-anchor" href="#词缀" aria-hidden="true">#</a> 词缀</h2><p>​ 前缀属性 <code>prefix</code> 和后缀属性 <code>suffix</code> 可以在 <code>cs:date</code>（使用 <code>cs:date</code> 定义本地化格式除外），<code>cs:date-part</code>（<code>cs:date</code> 调用本地化格式除外）、<code>cs:group</code>、<code>cs:label</code>、<code>cs:layout</code>、<code>cs:name</code>、<code>cs:names</code>、<code>cs:number</code> 以及 <code>cs:text</code> 中设置。属性值用来在输出的前面或者后面添加东西，但是只有输出的时候才会渲染。除在 <code>cs:layout</code> 中设置外，词缀将出现在同一个元素的 <a href="#%E6%A0%BC%E5%BC%8F%E5%8C%96">格式化</a>、<a href="#%E5%BC%95%E7%94%A8">引用</a>、<a href="#strip-periods">strip-periods</a> 和 <a href="#text-case">text-case</a> 的影响范围的外面，也就是这些属性的设置对前缀和后缀没有影响。作为一种解决方法，在父元素 <code>cs:group</code> 中设置上述属性，会产生影响。</p><h2 id="分隔符-delimiter" tabindex="-1"><a class="header-anchor" href="#分隔符-delimiter" aria-hidden="true">#</a> 分隔符\\delimiter</h2><p>​ <code>delimiter</code> 属性可以在 <code>cs:date</code>（用来分隔日期的各部分，如年和月；在 <code>cs:date</code> 调用本地化格日期格式时，分隔符将被禁用）、<code>cs:name</code>（分隔名字变量中不同的名字列表）、<code>cs:name</code>（分隔名字列表中的名字）、<code>cs:group</code> 以及 <code>cs;layout</code>（分隔子元素的输出）中设置分隔符。</p><h2 id="显示-display" tabindex="-1"><a class="header-anchor" href="#显示-display" aria-hidden="true">#</a> 显示\\display</h2><p><code>display</code> 属性可用于将各个参考文献条目构成一个或者多个文本块。如果使用该属性，所有的渲染元素都在该属性的控制下。（译注：是用来设置对齐效果的）属性可能的值为：</p><ul><li>&quot;block&quot; - 两边对其</li><li>&quot;left-margin&quot; - 左对齐。</li><li>&quot;right-inline&quot; - 右对齐</li><li>&quot;indent&quot; - 缩进。</li></ul><p><strong>例</strong></p><p>A. 除使用 <code>second-field-align</code> 外，使用 <code>&quot;left-margin&quot;</code> 和 <code>&quot;roght-inline&quot;</code> 可以实现相同的渲染效果。这种操作方式潜在的好处是，可以在最终的输出中进一步控制块的格式，例如，在 HTML 的 CSS 或者 word 的样式中。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bibliography</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left-margin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>citation-number<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- rendering elements --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bibliography</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>B. 每个作者的出版物列表。当 <code>subsequent-author-substitute</code> 设置为空字符串时，具有相同作者的条目的作者名字只渲染一次。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bibliography</span> <span class="token attr-name">subsequent-author-substitute</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sort</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>author<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>issued<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sort</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>names</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>author<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left-margin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>issued<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date-part</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>year<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>date</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bibliography</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染结果将类似下面：</p><table><thead><tr><th>Author1</th><th></th></tr></thead><tbody><tr><td>year-publication1</td><td>title-publication1</td></tr><tr><td>year-publication2</td><td>title-publication2</td></tr><tr><td>Author2</td><td></td></tr><tr><td>year-publication3</td><td>title-publication3</td></tr><tr><td>year-publication4</td><td>title-publication4</td></tr></tbody></table><p>C. 带有注释的条目，注释显示在参下方的缩进块中。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bibliography</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- rendering elements --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>indent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>abstract<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bibliography</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="引用-quotes" tabindex="-1"><a class="header-anchor" href="#引用-quotes" aria-hidden="true">#</a> 引用\\quotes</h2><p>​ <code>quotes</code> 属性可以在 <code>cs:text</code> 中设置。当设置为 <code>&quot;true&quot;</code> 时（默认为 <code>&quot;false&quot;</code>），渲染文本将会被包含在引用中。本地化的 <code>punctuation-in-quote</code> 选项控制用来连接的逗号或者句号是出现在引号的内部还是外部（默认外部），见 [Locale options](#Locale options)。</p><h2 id="strip-periods" tabindex="-1"><a class="header-anchor" href="#strip-periods" aria-hidden="true">#</a> Strip-periods</h2><p>​ <code>strip-periods</code> 属性可以在 <code>cs:label</code> 或者 <code>cd:text</code> 中设置，此外，当 <code>name</code> 被设置为 <code>&quot;month&quot;</code> 时，也可以在 <code>cs:date-part</code> 中设置。当该属性被设置为 <code>true</code> 的时候（默认的是 <code>&quot;false&quot;</code>），所有文本中的句号（英文中为点）将会被删除。</p><h2 id="文字大小写" tabindex="-1"><a class="header-anchor" href="#文字大小写" aria-hidden="true">#</a> 文字大小写</h2><p>​ <code>text-case</code> 属性可以在 <code>cs:date</code>,<code>cs:date-part</code>,<code>cs:label</code>,<code>cs:name-part</code>,<code>cs:number</code> 和 <code>cs:text</code> 中设置，可设置的值为：</p><ul><li>&quot;lowercase&quot;: 使用小写字母渲染文本</li><li>&quot;uppercase&quot;: 使用大写字母渲染文本</li><li>&quot;capitalize-first&quot;: 如果第一个词是小写的，将首字母设置为大写</li><li>&quot;capitalize-all&quot;: 将每个小写词的首字母设置为大写</li><li>&quot;sentence&quot;: renders text in sentence case(以句子的格式设置？)</li><li>&quot;title&quot;: renders text in title case(以标题的格式来设置？)</li></ul><h3 id="句子大小写转换" tabindex="-1"><a class="header-anchor" href="#句子大小写转换" aria-hidden="true">#</a> 句子大小写转换</h3><p>句子大小写转换 (在 &quot;Text-case&quot; 中设置为 &quot;sentence&quot;),</p><ol><li>对于大写字符串，字符串的第一个字符保持为大写。其它字母表示为小写</li><li>对于大小写混合的字符串，如果单词是小写，第一个单词的首字符大写，其它所有单词的大小写保持不变。</li></ol><p>CSL 处理器不能识别专有名词。因此，可以将句子大小写的字符转缺的转换为标题大小写，反之亦然。因此，通常最好在句子大小写的情况下存储注入标题之类的字符串，并且仅在样式需要其它大小写的情况下菜使用文本大小写。</p><h3 id="标题大小写转换" tabindex="-1"><a class="header-anchor" href="#标题大小写转换" aria-hidden="true">#</a> 标题大小写转换</h3><p>标题大小写转换 (在 &quot;Text-case&quot; 中设置为 &quot;title&quot;) 对英语来说：</p><ol><li>对大写的字符串，每个单词的第一个字母保持大写，其它的字母保持小写。</li><li>对于小写或者是混合的字符串，每个小写字符串的首字母大写。大写的字符串或者是混合的字符串保持原样。</li></ol><p>两种情况下，<code>stop words</code> 必须是小写的，除非他们是第一个或者对后一个单词，或者跟在冒号后面。<code>stop words</code> 包括：<code>&quot;a&quot;, &quot;an&quot;, &quot;and&quot;, &quot;as&quot;, &quot;at&quot;, &quot;but&quot;, &quot;by&quot;, &quot;down&quot;, &quot;for&quot;, &quot;from&quot;, &quot;in&quot;, &quot;into&quot;, &quot;nor&quot;, &quot;of&quot;, &quot;on&quot;, &quot;onto&quot;, &quot;or&quot;, &quot;over&quot;, &quot;so&quot;, &quot;the&quot;, &quot;till&quot;, &quot;to&quot;, &quot;up&quot;, &quot;via&quot;, &quot;with&quot;, &quot;yet&quot;</code>.</p><p><strong>非英语项目</strong></p><p>​ 由于许多语言不使用标题大小写，标题大小写转换 (在 &quot;Text-case&quot; 中设置为 &quot;title&quot;) 仅影响英语项目。</p><p>​ 如果 <code>cs:style</code> 中的 <code>default-locale</code> 属性没有设置，或者设置为 <code>en</code> 开头的单词，则假定为英语环境。如果某项的元数据包含一个语言字段，而且该字段不是以 <code>&quot;en&quot;</code> 开头的，才被视为是非英语环境。</p><p>​ 同样的，<code>default-locale</code> 被这是为除 <code>en</code> 开头的字段，就假定为非英语。如果项目是以 <code>en</code> 开头的字段，就被视为是英语。</p>`,184),c=[o];function u(d,i){return e(),n("div",null,c)}const r=a(s,[["render",u],["__file","style-behavior.html.vue"]]);export{r as default};
