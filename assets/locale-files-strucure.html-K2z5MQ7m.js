const e=JSON.parse('{"key":"v-08a9b111","path":"/code/citation-style-language/specification/locale-files-strucure.html","title":"本地化文件的结构","lang":"zh-CN","frontmatter":{"title":"本地化文件的结构","date":"2022-08-01T16:55:26.000Z","updated":"2022-08-03T10:25:19.000Z","description":"本地化文件的结构 [!warning] WORK IN&nbsp;PROGRESS 此页面正在施工中。 尽管本地化数据可以包括在 csl 文件中 (见 Locale)，但是本地化文件可以方便的提供本地化数据的设置，包括术语，日期格式以及语法选项。 每个本地化文件包括了一种语言方言的本地化数据。本地化文件中根元素为 cs:locale（样式/style 中则为 cs:style 元素）。在 cs:locale 根元素中，属性 xml:lang 用来设置方言。同时这一设置选项也用来对本地化文件命名（\\"xx-XX\\" 文件名为 locales-xx-XX.xml）。此外，根元素必须携带 version 属性，表明本地化文件的 CSL 版本（对 CSL 1.0 兼容的 locale file 必须设置为 \\"1.0\\"）。本地化文件有和样式同样的命名空间。cs:locale 元素可能包含 cs:info 作为第一个子元素，同时，必须含有 cs:terms、cs:date、cs:style-options 子元素。下面是一个 本地化文件的部分示例：","head":[["script",{"type":"text/javascript"},"var _hmt = _hmt || []"],["script",{"src":"https://hm.baidu.com/hm.js?5574297d56b065f5137cf3654e3de360"}],["script",{"src":"https://hm.baidu.com/hm.js?92a8f6d9fbb75efa90964afcd42be758"}],["meta",{"property":"og:url","content":"https://northword.cn/code/citation-style-language/specification/locale-files-strucure.html"}],["meta",{"property":"og:site_name","content":"北辞"}],["meta",{"property":"og:title","content":"本地化文件的结构"}],["meta",{"property":"og:description","content":"本地化文件的结构 [!warning] WORK IN&nbsp;PROGRESS 此页面正在施工中。 尽管本地化数据可以包括在 csl 文件中 (见 Locale)，但是本地化文件可以方便的提供本地化数据的设置，包括术语，日期格式以及语法选项。 每个本地化文件包括了一种语言方言的本地化数据。本地化文件中根元素为 cs:locale（样式/style 中则为 cs:style 元素）。在 cs:locale 根元素中，属性 xml:lang 用来设置方言。同时这一设置选项也用来对本地化文件命名（\\"xx-XX\\" 文件名为 locales-xx-XX.xml）。此外，根元素必须携带 version 属性，表明本地化文件的 CSL 版本（对 CSL 1.0 兼容的 locale file 必须设置为 \\"1.0\\"）。本地化文件有和样式同样的命名空间。cs:locale 元素可能包含 cs:info 作为第一个子元素，同时，必须含有 cs:terms、cs:date、cs:style-options 子元素。下面是一个 本地化文件的部分示例："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-09-16T13:52:48.000Z"}],["meta",{"property":"article:author","content":"Northword"}],["meta",{"property":"article:published_time","content":"2022-08-01T16:55:26.000Z"}],["meta",{"property":"article:modified_time","content":"2022-09-16T13:52:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"本地化文件的结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-01T16:55:26.000Z\\",\\"dateModified\\":\\"2022-09-16T13:52:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Northword\\",\\"url\\":\\"https://northword.cn\\"}]}"]]},"headers":[{"level":2,"title":"Info","slug":"info","link":"#info","children":[]},{"level":2,"title":"Terms(术语)","slug":"terms-术语","link":"#terms-术语","children":[{"level":3,"title":"序数后缀","slug":"序数后缀","link":"#序数后缀","children":[]},{"level":3,"title":"性别特定序数","slug":"性别特定序数","link":"#性别特定序数","children":[]}]},{"level":2,"title":"本地化日期格式","slug":"本地化日期格式","link":"#本地化日期格式","children":[]},{"level":2,"title":"本地化选项","slug":"本地化选项","link":"#本地化选项","children":[]}],"git":{"createdTime":1663336368000,"updatedTime":1663336368000,"contributors":[{"name":"Northword","email":"northword@outlook.com","commits":1}]},"readingTime":{"minutes":7.27,"words":2181},"filePathRelative":"code/citation-style-language/specification/locale-files-strucure.md","localizedDate":"2022年8月2日","excerpt":"<h1> 本地化文件的结构</h1>\\n<blockquote>\\n<p>[!warning] WORK IN&nbsp;PROGRESS\\n此页面正在施工中。</p>\\n</blockquote>\\n<p>尽管本地化数据可以包括在 csl 文件中 (见 <a href=\\"#Locale\\">Locale</a>)，但是本地化文件可以方便的提供本地化数据的设置，包括术语，日期格式以及语法选项。</p>\\n<p>每个本地化文件包括了一种语言方言的本地化数据。本地化文件中根元素为 <code>cs:locale</code>（样式/style 中则为 <code>cs:style</code> 元素）。在 <code>cs:locale</code> 根元素中，属性 <code>xml:lang</code> 用来设置方言。同时这一设置选项也用来对本地化文件命名（<code>\\"xx-XX\\"</code> 文件名为 <code>locales-xx-XX.xml</code>）。此外，根元素必须携带 <code>version</code> 属性，表明本地化文件的 CSL 版本（对 CSL 1.0 兼容的 locale file 必须设置为 <code>\\"1.0\\"</code>）。本地化文件有和样式同样的命名空间。<code>cs:locale</code> 元素可能包含 <code>cs:info</code> 作为第一个子元素，同时，必须含有 <code>cs:terms</code>、<code>cs:date</code>、<code>cs:style-options</code> 子元素。下面是一个 本地化文件的部分示例：</p>","autoDesc":true}');export{e as data};
