import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as c,c as l,a as s,b as n,e as t,d as e}from"./app-1ZTmwhuN.js";const p={},u=e('<h1 id="开启代理后校园网认证无法跳转" tabindex="-1"><a class="header-anchor" href="#开启代理后校园网认证无法跳转" aria-hidden="true">#</a> 开启代理后校园网认证无法跳转</h1><p>连接一个无线网络后，如果该网络需要认证（登录）（常见于开放网络或校园网），系统会访问 <code>http://www.msftconnecttest.com/redirect</code>，该网址会自动重定向到需要进行认证的地址。</p><p>但如果爬了梯，且代理的规则将 msftconnecttest.com 判断为走代理时，该页面无法正常跳转。这种情况常见于 SSR 的 PAC 模式、Clash 的规则中将微软策略匹配为 proxy 等。</p><p>由于我是用 Clash For Windows ，以下内容也针对 CFW ，但其他应当同理。</p><p>解决方法蛮多，比如：</p><ul><li>关闭 clash 的开机自启 / system proxy 。</li><li>需要认证时关闭 system proxy 。</li><li>记下认证页面的真实地址直接访问。</li><li>策略组 微软 选择直链。</li><li>在 rule 里添加关键词匹配规则使 msftconnecttest 被 direct 。</li></ul>',6),r={href:"https://docs.cfw.lbyczf.com/contents/bypass.html#%E8%AE%BE%E7%BD%AE%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">bypass</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token string">&quot;*msftconnecttest.com&quot;</span>
  <span class="token punctuation">-</span> <span class="token string">&quot;*c-msedge.net&quot;</span>
  <span class="token punctuation">-</span> <span class="token string">&quot;edge.microsoft.com&quot;</span>
  <span class="token punctuation">-</span> localhost
  <span class="token punctuation">-</span> 127.*
  <span class="token punctuation">-</span> 10.*
  <span class="token punctuation">-</span> 172.16.*
  <span class="token punctuation">-</span> 172.17.*
  <span class="token punctuation">-</span> 172.18.*
  <span class="token punctuation">-</span> 172.19.*
  <span class="token punctuation">-</span> 172.20.*
  <span class="token punctuation">-</span> 172.21.*
  <span class="token punctuation">-</span> 172.22.*
  <span class="token punctuation">-</span> 172.23.*
  <span class="token punctuation">-</span> 172.24.*
  <span class="token punctuation">-</span> 172.25.*
  <span class="token punctuation">-</span> 172.26.*
  <span class="token punctuation">-</span> 172.27.*
  <span class="token punctuation">-</span> 172.28.*
  <span class="token punctuation">-</span> 172.29.*
  <span class="token punctuation">-</span> 172.30.*
  <span class="token punctuation">-</span> 172.31.*
  <span class="token punctuation">-</span> 192.168.*
  <span class="token punctuation">-</span> &lt;local<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>终于是实现效果了，也没啥大问题。</p>`,2),m=s("code",null,"pip install",-1),k=s("code",null,"npm install",-1),v=s("code",null,"SSL 错误 ",-1),_={href:"https://github.com/Fndroid/clash_for_windows_pkg/issues/1568",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"PAC mode",-1),b=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">FindProxyForURL</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> host</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainHostName</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">dnsDomainIs</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token string">&quot;.msftconnecttest.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;DIRECT&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;PROXY 127.0.0.1:%mixed-port%; SOCKS5 127.0.0.1:%mixed-port%; DIRECT;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Proxy_servers_and_tunneling/Proxy_Auto-Configuration_PAC_file#isplainhostname",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.cfw.lbyczf.com/contents/parser.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/Fndroid/clash_for_windows_pkg/discussions/1532",target:"_blank",rel:"noopener noreferrer"};function w(C,x){const a=i("ExternalLinkIcon");return c(),l("div",null,[u,s("p",null,[n("上述方法治标不治本，添加 rule 虽然是个不错的方法（事实上这可能是多数人首先想到的方法），但是如果你用的是机场的订阅，那换个订阅/升级订阅后自己加的规则就没了。查阅 CFW 文档后发现了 "),s("a",r,[n("绕过系统代理 | Clash for Windows "),t(a)]),n(" ：")]),d,s("p",null,[n("但后来有一天我发现在命令提示符里进行 "),m,n(" 以及 "),k,n(" 的时候提示 "),v,n("，换源已无法解决，于是找到了 issue ： "),s("a",_,[n("下载文件遇到 SSL 错误 · Issue #1568 · Fndroid/clash_for_windows_pkg (github.com)"),t(a)]),n(" 后被建议使用"),h,n("，于是有了 PAC 版本的 Bypass ：")]),b,s("p",null,[n("PAC 概念及其写法可参考： "),s("a",f,[n("代理自动配置文件（PAC）文件 - HTTP | MDN (mozilla.org)"),t(a)])]),s("p",null,[n("另发现了配置文件预处理，或许也可以用：更新某个订阅后 CFW 自动对该配置文件追加规则。参考 "),s("a",g,[n("配置文件预处理 | Clash for Windows"),t(a)]),n(" 。")]),s("p",null,[n("Clash 的几种模式介绍： "),s("a",y,[n("一个困扰已久的问题 · Discussion #1532 · Fndroid/clash_for_windows_pkg (github.com)"),t(a)])])])}const E=o(p,[["render",w],["__file","开启代理后msftconnecttest无法跳转.html.vue"]]);export{E as default};
