import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c,a as n,b as e,e as a,d as i}from"./app-1ZTmwhuN.js";const r={},d=n("h1",{id:"在-windows-中使用-bash-shell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在-windows-中使用-bash-shell","aria-hidden":"true"},"#"),e(" 在 Windows 中使用 Bash shell")],-1),p=n("br",null,null,-1),u={href:"https://link.zhihu.com/?target=https%3A//www.yuque.com/achuan-2/blog/eu4rbz",target:"_blank",rel:"noopener noreferrer"},h=n("br",null,null,-1),b={href:"https://link.zhihu.com/?target=https%3A//achuan-2.github.io/posts/be43.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://zhuanlan.zhihu.com/p/418321777",target:"_blank",rel:"noopener noreferrer"},v=n("figure",null,[n("img",{src:"https://pic1.zhimg.com/v2-fe5921aa3b6ff6e32c670a8845e41634_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),g=n("p",null,"前排介绍",-1),k=n("ul",null,[n("li",null,"Git bash 是什么？"),n("li",null,"Git Bash 源自 MinGW, 是一个用于开发原生 Window 应用的开发环境, 提供了针对 WIn32 应用的 GCC、GNU binutils 等工具."),n("li",null,"为什么要用 Git Bash？"),n("li",null,"Windows 下的 Powershell 并不好用，或者说我并不知道如何使用。既然相较之下，更熟悉 Linux 命令行，就干脆把 Git Bash 当作默认终端了。Git Bash 自带 Vim，还集成了许多 Linux 命令，对我来说更加顺手")],-1),_=n("h2",{id:"_0-准备工作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-准备工作","aria-hidden":"true"},"#"),e(" 0 准备工作")],-1),f={href:"https://link.zhihu.com/?target=https%3A//gitforwindows.org/",target:"_blank",rel:"noopener noreferrer"},q=i(`<p>安装教程随便网上找一篇就好了，不多说</p><h2 id="_1-设置为默认终端" tabindex="-1"><a class="header-anchor" href="#_1-设置为默认终端" aria-hidden="true">#</a> 1 设置为默认终端</h2><ol><li>Windows Terminal 配置 Git bash 为默认终端</li><li>VSCode 配置 Git bash 为默认终端</li></ol><h3 id="_1-1-windows-terminal-配置-git-bash-为默认终端" tabindex="-1"><a class="header-anchor" href="#_1-1-windows-terminal-配置-git-bash-为默认终端" aria-hidden="true">#</a> 1.1 Windows Terminal 配置 Git bash 为默认终端</h3><p>现在 Windows Terminal 有了图形界面，直接选择就好</p><figure><img src="https://pic4.zhimg.com/v2-f5ab73bb87783dd158e5bac6936ca1db_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>具体 json 文件配置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;defaultProfile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{c891c3d2-b798-4857-83c0-89bf2ea34021}&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;profiles&quot;</span><span class="token operator">:</span> 
    <span class="token punctuation">{</span>
        <span class="token property">&quot;defaults&quot;</span><span class="token operator">:</span> 
        <span class="token punctuation">{</span>
            ...
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;list&quot;</span><span class="token operator">:</span> 
        <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;commandline&quot;</span><span class="token operator">:</span> <span class="token string">&quot;D:\\\\Environment\\\\Git\\\\bin\\\\bash.exe --login -i&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;guid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{c891c3d2-b798-4857-83c0-89bf2ea34021}&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Git Bash&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;D:\\\\Program_Files\\\\Git\\\\mingw64\\\\share\\\\git\\\\git-for-windows.ico&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>&quot;commandline&quot;: &quot;D:\\\\Environment\\\\Git\\\\bin\\\\bash.exe --login -i&quot;,</code></p><p>之所以加了--login -i 后面见 「2 可能出现的问题」</p><h3 id="_1-2-vscode-配置-git-bash-为默认终端" tabindex="-1"><a class="header-anchor" href="#_1-2-vscode-配置-git-bash-为默认终端" aria-hidden="true">#</a> 1.2 VSCode 配置 Git bash 为默认终端</h3><p>前排提示：我最初在网上搜索，发现之前许多教程里的 json 变量 <code>“terminal.integrated.shell.windows”</code> 已经过时了，现在是需要配置 profiles。</p><figure><img src="https://pic1.zhimg.com/v2-043c7dad363d49018076c8346b578238_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,13),w={href:"https://link.zhihu.com/?target=https%3A//code.visualstudio.com/docs/editor/integrated-terminal",target:"_blank",rel:"noopener noreferrer"},x=i(`<p>Ctrl+,打开设置，搜索 <code>shell:windows</code>，在 <code>settings.json</code> 的最后添加下面的配置</p><p>自行修改 Git Bash 和 Powershell exe 的路径</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;terminal.integrated.automationShell.windows&quot;</span><span class="token operator">:</span> <span class="token string">&quot;D:\\\\Environment\\\\Git\\\\bin\\\\bash.exe&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;terminal.integrated.profiles.windows&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;PowerShell&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;C:\\\\Program Files\\\\PowerShell\\\\7-preview\\\\pwsh.exe&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;terminal-powershell&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;-NoLogo&quot;</span> <span class="token comment">//不显示 powershell 开头的输出</span>
<span class="token comment">//不加载Powershell的配置和美化</span>
<span class="token comment">//,&quot;-NoProfile&quot; </span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Command Prompt&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;\${env:windir}\\\\Sysnative\\\\cmd.exe&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;\${env:windir}\\\\System32\\\\cmd.exe&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;terminal-cmd&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Bash&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;D:\\\\Environment\\\\Git\\\\bin\\\\bash.exe&quot;</span> <span class="token comment">//Git bash路径</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;terminal-bash&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;-i&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;-l&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 激活Git在外部的配置</span>
        <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-可能出现的配置问题" tabindex="-1"><a class="header-anchor" href="#_2-可能出现的配置问题" aria-hidden="true">#</a> 2 可能出现的配置问题</h2><ol><li>Windows Terminal 和 VSCode 打开 Git Bash，发现不会加载配置</li><li>Git Bash 不会加载 <code>~/.bashrc</code> 的配置</li><li>Git-Bash 修改前缀 (隐藏用户 @ 主机)</li><li>修复 Git Bash 中文乱码</li></ol><h3 id="_2-1-windows-terminal-和-vscode-打开-git-bash-发现不会加载配置" tabindex="-1"><a class="header-anchor" href="#_2-1-windows-terminal-和-vscode-打开-git-bash-发现不会加载配置" aria-hidden="true">#</a> 2.1 Windows Terminal 和 VSCode 打开 Git Bash，发现不会加载配置</h3><p>解决方法，其实上面已经给出了，就是在 bash.exe 后面加-l, - i 配置，这样激活 Git Bash 就会加载 <code>~/.bash_profile</code> 的配置</p><h3 id="_2-2-git-bash-不会加载-bashrc-的配置" tabindex="-1"><a class="header-anchor" href="#_2-2-git-bash-不会加载-bashrc-的配置" aria-hidden="true">#</a> 2.2 Git Bash 不会加载 <code>~/.bashrc</code> 的配置</h3><p>确实是这样，Git Bash 在 Win 端只会 <code>source ~/.bash_profile</code> 而不会激活 <code>~/.bashrc</code> 的配置。所以如果你和我一样，喜欢在 <code>~/.bashrc</code> 配置别名，在 <code>~/.bash_profile</code> 配置环境的话，</p><p>解决方法是那就在 <code>~/.bash_profile</code> 加一行，<code>source ~/.bashrc</code> 就好啦！</p><h3 id="_2-3-git-bash-修改前缀-隐藏用户-主机" tabindex="-1"><a class="header-anchor" href="#_2-3-git-bash-修改前缀-隐藏用户-主机" aria-hidden="true">#</a> 2.3 Git-Bash 修改前缀 (隐藏用户 @ 主机)</h3><p>如果直接打开 Git Bash 终端，你会发现显示的东西很冗余</p><p>有用户 @ 主机名，MINGW64，绝对路径。其中前面两个都是固定的，所以就想要把这个隐藏</p><figure><img src="https://pic3.zhimg.com/v2-b63cf1d65cae718ebc51b7843505859a_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 Git-Bash 中我们输入以下代码: <code>vi ~/.bash_profile</code> , 然后把以下内容添加到配置文件里面。我这里是隐藏了用户 @ 主机，同时把绝对路径改成了只显示当前文件夹， 需要看全路径的话用 <code>pwd</code> 就显示了。这样不至于截图、被人看到时，太暴露隐私哈哈哈。</p><p>根据需要自行选择配置。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Shows Git branch name in prompt.
parse_git_branch() {
  git branch 2&gt; /dev/null | sed -e &#39;/^[^*]/d&#39; -e &#39;s/* \\(.*\\)/ (\\1)/&#39;
}
# 显示 用户 @ 主机
# export PS1=&quot;\\u@\\h \\W\\[\\033[32m\\]\\$(parse_git_branch)\\[\\033[00m\\] $ &quot;
# 隐藏用户 @ 主机，显示当前文件夹 
#export PS1=&quot;\\W\\[\\033[32m\\]\\$(parse_git_branch)\\[\\033[00m\\]&quot;

# 只显示当前文件夹
export PS1=&quot;\\[\\e[32;1m\\]\\W $\\[\\e[0m\\]\\[\\033[32m\\]\\$(parse_git_branch)\\[\\033[00m\\] &quot;

# 显示全路径
#export PS1=&quot;\\[\\e[32;1m\\]\\w $\\[\\e[0m\\]\\[\\033[32m\\]\\$(parse_git_branch)\\[\\033[00m\\] &quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>粘贴完后，<code>source .bash_profile</code> 的结果</p><figure><img src="https://pic4.zhimg.com/v2-c27943b52ce1a74d12add876f028f657_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>补充下环境下默认的特殊符号所代表的意义：</p><ul><li><code>\\u</code> ：当前用户的账号名称</li><li><code>\\w</code> ：完整的工作目录名称。家目录会以 ~代替</li><li><code>\\W</code> ：利用 basename 取得工作目录名称，所以只会列出最后一个目录</li><li><code>\\H</code>：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是 fc4.linux</li><li><code>\\h</code> ：仅取主机的第一个名字，如上例，则为 fc4，.linux 则被省略</li><li><code>\\d</code> ：代表日期，格式为 weekday month date，例如：&quot;Mon Aug1&quot;</li><li><code>\\t</code> ：显示时间为 24 小时格式，如：HH：MM：SS</li><li><code>\\T</code> ：显示时间为 12 小时格式</li><li><code>\\A</code> ：显示时间为 24 小时格式：HH：MM</li><li><code>\\v</code> ：BASH 的版本信息</li><li><code>#</code> ：下达的第几个命令</li><li><code>$</code> ：提示字符，如果是 root 时，提示符为：# ，普通用户则为：$</li></ul><blockquote><p>参考：</p></blockquote>`,22),G={href:"https://link.zhihu.com/?target=https%3A//www.cnblogs.com/kevingrace/p/5985970.html",target:"_blank",rel:"noopener noreferrer"},y=i('<h3 id="_2-4-修复-git-bash-中文乱码" tabindex="-1"><a class="header-anchor" href="#_2-4-修复-git-bash-中文乱码" aria-hidden="true">#</a> 2.4 修复 Git Bash 中文乱码</h3><p>Git bash 自身配置：</p><ul><li>终端不能显示中文：打开 Git bash，右键打开选项， <code>Options-&gt;Text-&gt;Locale</code> 改为 <code>zh_CN</code>，<code>Character set</code> 改为 <code>UTF-8</code></li><li>解决 git status 不能显示中文：终端输入 <code>git config --global core.quotepath false</code></li></ul><p>Windows Terminal 和 VSCode 中别忘了添加 --login -i 参数</p><blockquote><p>参考资料：</p></blockquote>',5),z={href:"https://zhuanlan.zhihu.com/p/166407830",target:"_blank",rel:"noopener noreferrer"},B={href:"https://zhuanlan.zhihu.com/p/133706032",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"解决中文无法显示的问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#解决中文无法显示的问题","aria-hidden":"true"},"#"),e(" 解决中文无法显示的问题")],-1),S={href:"https://juejin.cn/post/6844904071535525896",target:"_blank",rel:"noopener noreferrer"},W=i(`<p>打开Git安装目录下的 <strong>C:\\Git\\etc\\bash.bashrc</strong> （具体路径以你安装的为准）文件，在末尾追加一行：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">export LC_ALL</span><span class="token punctuation">=</span><span class="token value attr-value">en_US.UTF-8</span>
复制代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>并保存，重启终端就好了。</p><h2 id="_3-你可能不知道却非常有用的技巧" tabindex="-1"><a class="header-anchor" href="#_3-你可能不知道却非常有用的技巧" aria-hidden="true">#</a> 3 你可能不知道却非常有用的技巧</h2><ol><li>在终端启动软件查看文件</li><li>Linux 下常用软件下载</li><li>资源管理器地址妙用，直接在终端打开当前文件夹</li></ol><h3 id="_3-1-在终端启动软件查看文件" tabindex="-1"><a class="header-anchor" href="#_3-1-在终端启动软件查看文件" aria-hidden="true">#</a> 3.1 在终端启动软件查看文件</h3><ul><li>在终端如何快速查看文件</li><li>Windows 里有一个很有用的命令 「start」,<code>start .</code> 用资源管理器打开当前目录（或用 <code>explorer .</code>），<code>start 文件名</code> 用默认软件打开这个文件，这样就不用开了终端，还要手动去找这个文件再查看了，工作流得到优化</li><li>在终端以 VSCode 打开当前项目</li><li>首先需要在环境变量 Path 中添加 VSCode 的 Code.exe 地址，比如我的是 <code>D:\\Program_Files\\Microsoft VS Code\\Code.exe</code></li><li>然后在终端下使用 <code>code ./</code> 就可以打开当前项目</li></ul><blockquote><p>参考：</p></blockquote>`,8),j={href:"https://link.zhihu.com/?target=https%3A//blog.csdn.net/u012995964/article/details/85810626",target:"_blank",rel:"noopener noreferrer"},V=n("h3",{id:"_3-2-linux-下常用软件下载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-2-linux-下常用软件下载","aria-hidden":"true"},"#"),e(" 3.2 Linux 下常用软件下载")],-1),P=n("ul",null,[n("li",null,"安装 tree 以树形显示文件结构"),n("li",null,"安装")],-1),T={href:"https://link.zhihu.com/?target=http%3A//gnuwin32.sourceforge.net/packages/tree.htm",target:"_blank",rel:"noopener noreferrer"},A=n("li",null,"下载解压完成后，将 bin 目录下的 tree.exe 复制到 Git Bash 安装路径下的 usr/bin 文件夹下，完成",-1),L=i("<ul><li>常用命令</li><li>基本命令格式：<code>tree [-option] [dir]</code></li><li>显示中文，<code>-N</code>，如果中文名是中文，不加-N 有些电脑上是乱码的</li><li>选择展示的层级：<code>-L [n]</code></li><li>只显示文件夹：<code>-d</code></li><li>区分文件夹、普通文件、执行文件：<code>-FC</code>，C 是加上颜色，</li><li>起别名：可以起一个别名 <code>alias tree=&#39;tree -FCN&#39;</code></li><li>输出目录结构到文件，写文档的时候需要展示项目目录就会用到 <code>tree -L 2 -I &#39;*.js|node_modules|*.md|*.json|*.css|*.ht&#39; &gt; tree.txt</code></li><li>添加 wget 下载工具</li><li>安装</li></ul>",1),N={href:"https://link.zhihu.com/?target=https%3A//eternallybored.org/misc/wget/2",target:"_blank",rel:"noopener noreferrer"},$=n("li",null,"移动到 Git Bash 安装路径下的 usr/bin 文件夹下，完成",-1),F=i(`<ul><li>常用命令</li><li>最直接的下载命令：<code>wget [url]</code></li><li>指定文件名 <code>-O</code></li><li>指定目录 <code>-P</code></li><li>下载多个文件 <code>wget -i [url.txt]</code></li><li>断点续传 <code>wget -c -t [n] [url]</code>,n 代表尝试的次数，0 代表一直尝试</li><li>后台执行：<code>wget -b [url]</code> 可以添加 <code>-b</code> 选项，这时执行该命令的回显信息都会自动存储在 <code>wget.log</code> 文件中</li><li>下载一个网站的所有图片、视频、pdf <code>wget -r -A.pdf url</code></li></ul><h3 id="_3-3-资源管理器地址妙用-直接在终端打开当前文件夹" tabindex="-1"><a class="header-anchor" href="#_3-3-资源管理器地址妙用-直接在终端打开当前文件夹" aria-hidden="true">#</a> 3.3 资源管理器地址妙用，直接在终端打开当前文件夹</h3><p>alt + d 可以直接把光标移动到资源管理器地址栏，对于不同终端</p><ul><li>cmd： 输入 <code>cmd</code></li><li>Windows Terminal：输入 <code>wt</code></li><li>Git Bash： 输入 <code>bash</code></li><li>VSCode:</li><li>方法一：输入 <code>code.cmd .</code>，必须要加.，不然只是打开 VSCode 软件，而不会打开当前文件夹</li><li>方法二：新建变量 code，输入 VSCode 地址，然后在地址栏就可以输入 %code%（还是上面那个输入快点，不用按 shift）</li><li>方法三：直接右键吧，为啥这么折腾</li><li>方法四：utools 快捷命令</li><li>为什么我直接输入 code 就是打开一个 sh 脚本呢，我用 <code>start .</code> 打开这个脚本的目录，突然恍然大悟，原来就是因为这个 code 文件影响到了我直接用 code，我看了下脚本，这个应该是用于 wsl 启动的（我随口说的，你可以尝试去掉这个文件，然而也不能通过在地址栏输入 code 打开 VSCode 就是了）</li></ul><figure><img src="https://pic1.zhimg.com/v2-9ad0e49a560f46c954aff91051c5647c_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-4-添加一些常用别名增加效率" tabindex="-1"><a class="header-anchor" href="#_3-4-添加一些常用别名增加效率" aria-hidden="true">#</a> 3.4 添加一些常用别名增加效率</h3><p>我的 <code>~/.bashrc</code> 文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 为了更好的push到github，配置代理
export http_proxy=http://127.0.0.1:10809
export https_proxy=http://127.0.0.1:10809

# 方便cd 进 hexo
alias blog=&#39;cd /e/blog&#39;
# hexo 博客发布，num run是package.json中script list配置的别名
alias dev=&#39;npm run v&#39;
alias publish=&#39;npm run p&#39;

# 配置tree别名
alias tree=&#39;tree -FCN&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function M(D,E){const s=o("ExternalLinkIcon");return l(),c("div",null,[d,n("blockquote",null,[n("p",null,[e("概述：Git Bash 内置了 Vim 和多数 Linux 命令，使用 Git Bash 为默认终端能提高 Win 端终端操作文件的效率"),p,e(" 本文语雀地址："),n("a",u,[e("https://www.yuque.com/achuan-2/blog/eu4rbz"),a(s)]),h,e(" 本文博客地址："),n("a",b,[e("https://achuan-2.github.io/posts/be43.html"),a(s)]),e(" source: "),n("a",m,[e("https://zhuanlan.zhihu.com/p/418321777"),a(s)])])]),v,g,k,_,n("p",null,[e("Windows 下载地址："),n("a",f,[e("Git for Windows"),a(s)])]),q,n("p",null,[e("参考官网的文档："),n("a",w,[e("Integrated Terminal in Visual Studio Code"),a(s)])]),x,n("ul",null,[n("li",null,[n("a",G,[e("linux 系统终端命令提示符设置（PS1）记录 - 散尽浮华 - 博客园 (cnblogs.com)"),a(s)])])]),y,n("ul",null,[n("li",null,[n("a",z,[e("Windows Terminal 修复 Git Bash 中文乱码 && 添加 WT 到右键菜单 - 知乎 (zhihu.com)"),a(s)])]),n("li",null,[n("a",B,[e("git 显示中文和解决中文乱码 - 知乎 (zhihu.com)"),a(s)])])]),C,n("blockquote",null,[n("p",null,[n("a",S,[e("Win10也要愉快地使用Bash - 掘金 (juejin.cn)"),a(s)])])]),W,n("ul",null,[n("li",null,[n("a",j,[e("Windows 小技巧 -- 命令行窗口打开指定目录的资源管理器_Anyers 的专栏-CSDN 博客_命令行打开资源管理器"),a(s)])])]),V,P,n("ol",null,[n("li",null,[e("下载地址："),n("a",T,[e("Tree for Windows (sourceforge.net)"),a(s)]),e("，下载 Binaries 的 Zip 文件")]),A]),L,n("ol",null,[n("li",null,[e("下载 wget 二进制安装包，地址："),n("a",N,[e("https://eternallybored.org/misc/wget/2"),a(s)])]),$]),F])}const U=t(r,[["render",M],["__file","index.html.vue"]]);export{U as default};
