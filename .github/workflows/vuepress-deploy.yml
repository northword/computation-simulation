name: Deploy
on:
    push:
      branches:
        - main
env:
    TZ: Asia/Shanghai

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout 🛎️
            uses: actions/checkout@v2.3.4
            with:
                persist-credentials: false
                fetch-depth: 0
          - uses: pnpm/action-setup@v2
            with:
              version: 6.32.9
          - name: Setup Node
            uses: actions/setup-node@v3
            with:
              node-version: "16.x"
              registry-url: "https://registry.npmjs.org"
              # cache: "yarn"
          - name: Build
            run: |
              pnpm install
              pnpm build:vite
          - name: Deploy 🚀
            uses: peaceiris/actions-gh-pages@v3.7.3
            with:
                github_token: ${{ secrets.ACCESS_TOKEN }}
                publish_dir: dist
                commit_message: ${{ github.event.head_commit.message }}
                # keep_files: false
                force_orphan: true
    # deploy-server:
    #     needs: build-and-deploy
    #     runs-on: ubuntu-latest
    #     steps:     
          - name: Prepare SSH to work with the remote server
            run: |
              cd ~ && mkdir .ssh &&
              touch ~/.ssh/known_hosts &&
              echo "${{ secrets.SSH_HOSTKEY }}" > ~/.ssh/known_hosts

          - name: Deploy to Server
            uses: easingthemes/ssh-deploy@main
            env:
                SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
                ARGS: "-rltgoDzvO --delete"
                SOURCE: "dist/"
                REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
                REMOTE_USER: ${{ secrets.REMOTE_USER }}
                TARGET: ${{ secrets.REMOTE_TARGET }}
                EXCLUDE: "/dist/, /node_modules/, ./.user.ini"

    # sync:
    #     needs: build-and-deploy
    #     runs-on: ubuntu-latest
    #     steps:      
    #       - name: Checkout source code
    #         uses: actions/checkout@v2.3.4

    #       - name: Get current repository name
    #         id: info
    #         uses: actions/github-script@v3.1
    #         with:
    #           github-token: ${{secrets.GITHUB_TOKEN}}
    #           result-encoding: string
    #           script: |
    #             return context.repo.repo;
    #       - name: Mirror the GitHub repos to Gitee
    #         uses: Yikun/hub-mirror-action@v0.12
    #         with:
    #           src: github/northword
    #           dst: gitee/northword
    #           dst_key: ${{ secrets.GITEE_PRIVATE_SSH_KEY }}
    #           dst_token: ${{ secrets.GITEE_PRIVATE_TOKEN }}
    #           static_list: '${{ steps.info.outputs.result }}'
    #           account_type: user
    #           force_update: true
    # reload-pages:
    #     needs: sync
    #     runs-on: ubuntu-latest
    #     steps:
    #       - name: Build Gitee Pages
    #         uses: yanglbme/gitee-pages-action@main
    #         with:
    #           # 注意替换为你的 Gitee 用户名
    #           gitee-username: northword
    #           # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
    #           gitee-password: ${{ secrets.GITEE_PASSWORD }}
    #           # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
    #           gitee-repo: northword/dft-learning
    #           # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
    #           branch: gh-pages

       